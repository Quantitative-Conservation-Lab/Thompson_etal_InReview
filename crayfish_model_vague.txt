
model { 
  #----------------------------------------------------------------------------#
  ####----------------------------- Priors ---------------------------------####
  
  # removal probability:
  p ~ dbeta(p.alpha, p.beta)T(0.00001, 0.9999) #capture efficiency
  p2 <- (n.trap)/(8000)*p
  
  # june growth prior: 
  grow.pre ~ dbeta(notjune.alpha,notjune.beta)T(0.0001, 0.9999)
  
  # not june survival prior: 
  grow.jun.pre ~ dgamma(june.alpha, june.beta) 
  
  for (i in 1:I){
  #Initial abundance at all segments
    N.belief[i,1,1] ~ dpois(lambda[i]) T(, popK)
    lambda[i] ~ dgamma(initpop.alpha[i],initpop.beta[i])T(0.00001, popK) #alpha and beta are priors (data)
    N.init[i] <-  N.belief[i,1,1]
  }
  
  #Monthly survival:
   monthly.grow[1] <- grow.jun.pre 
    
  for(j in 2:J){
    monthly.grow[j] <- grow.pre
  }
  
  #----------------------------------------------------------------------------# 
  ####-------------------------- Removal Model -----------------------------####
  for(j in 1:J){  
    for (i in 1:segs.remove){
      Y[segs.rem[i], j, 1] ~ dbin(p2, N.belief[segs.rem[i],j,1]) #rempoval data
              
      for (k in 2:K){ #secondary
        # Abundance after 1st secondary removal (function of previous abundance and previous removals)
        N.belief[segs.rem[i],j,k] <- N.belief[segs.rem[i],j,k-1] - Y[segs.rem[i],j,k-1] 
      } #K loop
      
      # Abundance at the end of primary removal period j (secondary K):
      R[segs.rem[i],j] <- N.belief[segs.rem[i],j,K] - Y[segs.rem[i],j,K] #function of previous abundance and removals
    }
    
    #population remaining at non removal sites
    for(i in 1:31){
     R[not.remove[i],j] <- N.belief[not.remove[i],j,1] 
    }
    
    ####--------------------- Population Change Model --------------------####
    #population after population change
    for(i in 1:I){
      D[i,j] ~ dpois(R[i,j]*monthly.grow[j]) T(, popK)
    } #I loop
  } #J loop
  
  for(j in 2:J){
    #Abundance for 1st removal of the primary period (function of movement into the segment)
    N.belief[1:I, j, 1] <- D[1:I,j-1] 
  }
  
  D.fin[1:I] <- D[1:I,J]
}
  

