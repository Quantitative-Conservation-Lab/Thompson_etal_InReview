
model{

# -------------------------------------------------
# Parameters:
# gamma: invasion probability
# eps: erradication probability
# p: probability of observing the plant
# -------------------------------------------------
# States (S):
# 1 empty
# 2 invaded
# 
# Observations (O):  
# 1 absent
# 2 present
# -------------------------------------------------

#### PRIORS ####
  eps.l ~ dbeta(eps.l_a,eps.l_b) #erradication when at low state
  eps.h ~ dbeta(eps.h_a,eps.h_b) #erradication when at high state
  gamma0 ~dnorm(gamma0_a,gamma0_b) #intrinsic invasion probability 
  gamma1 ~ dnorm(gamma1_a, gamma1_b) #effect of neighboring locations on invasion probability
  phi.lh ~ dbeta(phi.lh_a, phi.lh_b) #transition from low to high
  phi.hh ~ dbeta(phi.hh_a, phi.hh_b) #transition from high to high
  
  rho.l ~ dbeta(pl_a,pl_b) #base detection for low state
  alpha.l ~ dnorm(l_mean,l_tau) #difference in baseline detection probability between observation1 and 2, low state
  rho.h ~ dbeta(ph_a,ph_b) #base detection for high state
  alpha.h ~ dnorm(h_mean, h_tau) #difference in baseline detection probability between observation1 and 2, high state
  delta ~ dbeta(delta_a, delta_b) #probability of observing the high state given species has been detected and true state is high


  #detection parameters
  l_tau <- 1/(l_sd * l_sd) #precision
  h_tau <- 1/(h_sd * h_sd) #precision
  logit(p1.l) <- rho.l
  logit(p1.h) <- rho.h
  
  
  logit(p2.l) <- alpha.l + rho.l 
  logit(p2.h) <- alpha.h + rho.h
  
#--------------------------------------------------#
# STATE TRANSITION
for (i in 1:n.sites){  
  # State transition probabilities: probability of S(t+1) given S(t)
  for (t in 1:n.weeks){
    #index = [current state, location, time, future state]
    #empty stay empty
    ps[1,i,t,1] <- 1-gamma[i,t] #1-gamma = not invasion probability
    
    #empty to low abundance
    ps[1,i,t,2] <- gamma[i,t] #invasion probability
    
    #empty to high abundance
    ps[1,i,t,3] <- 0 #invasion probability

    #low abundance to empty
    ps[2,i,t,1] <- (eps.l*rem.vec[i]) #erradication probability
                                      # rem.vec[i] = 0,1 if 0, then no removal and no erradiction
    
    #low abundance to low abundance
    ps[2,i,t,2] <- (1- eps.l*rem.vec[i])*(1-phi.lh) #erradication failure probability
    
    #low abundance to high abundance
    ps[2,i,t,3] <- (1- eps.l*rem.vec[i])*(phi.lh)
    
    #high abundance to empty
    ps[3,i,t,1] <- (eps.h*rem.vec[i]) #erradication probability
    
    #high abundance to low abundance
    ps[3,i,t,2] <- (1- eps.h*rem.vec[i])*(1-phi.hh) #erradication failure probability
    
    #low abundance to high abundance
    ps[3,i,t,3] <- (1- eps.h*rem.vec[i])*(phi.hh)
    
    #--------------------------------------------------#
    # OBSERVATION PROBABILITIES 1 (for detection/nondetection data)
    
    #Empty and not observed  
    po_dat1[1,i,t,1] <- 1
    
    #Empty and observed
    po_dat1[1,i,t,2] <- 0
 
    #Low state and not observed
    po_dat1[2,i,t,1] <- 1-p1.l #not detected probability
    
    #Low state and observed
    po_dat1[2,i,t,2] <- p1.l #detection probability
    
    #High state and not observed
    po_dat1[3,i,t,1] <- 1-p1.h #not detected probability
    
    #High state and observed
    po_dat1[3,i,t,2] <- p1.h #detection probability
    
    
    #--------------------------------------------------#
    # OBSERVATION PROBABILITIES 2 (for multistate data) 
    # Observation probabilities of given S(t)
    #index = [current state, location, time, current observation]
   
    #Empty and not observed    
    po_multi[1,i,t,1] <- 1
    
    #Empty and observed low 
    po_multi[1,i,t,2] <- 0
    
    #Empty and observed high  
    po_multi[1,i,t,3] <- 0
 
    #Low state and not observed   
    po_multi[2,i,t,1] <- 1-p2.l #not detected probability
    
    #Low state and observed low 
    po_multi[2,i,t,2] <- p2.l #detection probability
    
    #Low state and observed high 
    po_multi[2,i,t,3] <- 0 
    
    #High state and not observed   
    po_multi[3,i,t,1] <- 1-p2.h #not detected probability
    
    #High state and observed low 
    po_multi[3,i,t,2] <- (1-p2.h)*(1-delta) #detection probability
    
    #high abundance observed high abundance
    po_multi[3,i,t,3] <- p2.h*delta
   

   logit(gamma[i,t]) <- gamma1*D[i,t] + gamma0 #invasion probability

   
  } #t
} #i

  #### Likelihood ####
  for (i in 2:(n.sites-1)){
    # Define state at beginning
    State[i,1] <- S.init[i] #we know state at the start
    D[i,1] <- D.init[i]
    
    for (t in 2:n.weeks){ #12
      # State process: state given previous state and transition probability
      State[i,t] ~ dcat(ps[State[i,t-1], i, t-1, ]) 
      
      D[i,t] <- State[i-1,t] + State[i+1,t] #state of neighbors 
      
     
    } #t
      
      #Derived parameter:
      
      State.fin[i] <- State[i,n.weeks] #state after 12 months
  } #i
  
  #Fill in above for edge sites (1 and n.sites)
  State[1,1] <- S.init[1] 
  State[n.sites,1] <- S.init[n.sites] 
  D[1,1] <- D.init[1]
  D[n.sites,1] <- D.init[n.sites]
  
   for (t in 2:n.weeks){
      State[1,t] ~ dcat(ps[State[1,t-1], 1, t-1, ])
      State[n.sites,t] ~ dcat(ps[State[n.sites,t-1], n.sites, t-1, ])
      D[1,t] <- State[2,t]
      D[n.sites,t] <- State[n.sites-1,t]
    } 

  State.fin[1] <- State[1,n.weeks]
  State.fin[n.sites] <- State[n.sites,n.weeks]
  
  
  for(h in 1:n.obs){
  
    # Observation process: draw observation given state
    y1[site.obs1[h]] ~ dcat(po_dat1[State.fin[site.obs1[h]], site.obs1[h], n.weeks-1, ])
    
    y2[site.obs.multi[h]] ~ dcat(po_multi[State.fin[site.obs.multi[h]], site.obs.multi[h], n.weeks-1, ])
    
    
  } #obs sites
  

} #end model

